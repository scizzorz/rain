macro new(block) as (body)
  let node = ast.block:empty()
  save node

  let tab = ast.name:init(gensym())
  node.expr = tab
  node:add(ast._let:init(tab, ast._table))

  let i = 0
  while body.stmts[i]
    let stmt = body.stmts[i]
    i = i + 1

    if stmt.tag == "assn"
      let idx = ast.idx:init(tab, ast._str:init(stmt.lhs.value))
      node:add(ast.assn:init(idx, stmt.rhs))

    else
      let msg = "Ignoring invalid statement in dictionary expansion: " $ stmt.tag
      node:add(ast.warning:init(msg))
