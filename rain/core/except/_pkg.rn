link "./except.c"

var error = table
error.msg = "error"
error.str = func(self)
  return self.msg

var arg_mismatch = table :: error
arg_mismatch.msg = "argument mismatch"

var uncallable = table :: error
uncallable.msg = "uncallable value"

var interrupt = table :: error
interrupt.msg = "received interrupt signal"

var fpe = table :: error
fpe.msg = "floating point error"

var segfault = table :: error
segfault.msg = "segmentation fault"

export unbound_var = table :: error
unbound_var.msg = "unbound variable"

foreign "rain_exc_unbound_var" = unbound_var
foreign "rain_exc_arg_mismatch" = arg_mismatch
foreign "rain_exc_error" = error
foreign "rain_exc_fpe" = fpe
foreign "rain_exc_interrupt" = interrupt
foreign "rain_exc_segfault" = segfault
foreign "rain_exc_uncallable" = uncallable

exports = {
  error = error,
  arg_mismatch = arg_mismatch,
  uncallable = uncallable,
  interrupt = interrupt,
  fpe = fpe,
  segfault = segfault,
} :: null
