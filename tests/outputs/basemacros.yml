!program;1
stmts:
- !import;1
  name: macros
  rename: null
- !assn;3
  export: false
  lhs: !name;1
    value: fudge
  rhs: !array;1
    items:
    - !str;1
      value: one
    - !str;1
      value: two
    - !str;1
      value: three
  var: true
- !assn;3
  export: false
  lhs: !name;1
    value: node
  rhs: !dict;2
    items:
    - - !str;1
        value: tag
      - !str;1
        value: node
    - - !str;1
        value: body
      - !str;1
        value: body
    set_meta: true
  var: true
- !assn;3
  export: false
  lhs: !name;1
    value: person
  rhs: !dict;2
    items:
    - - !str;1
        value: name
      - !str;1
        value: Phil
    - - !str;1
        value: age
      - !int;1
        value: 47
    - - !str;1
        value: kids
      - !int;1
        value: 4
    - - !str;1
        value: married
      - !bool;1
        value: true
    set_meta: true
  var: true
- !assn;3
  export: false
  lhs: !name;1
    value: square
  rhs: !func;2
    body: !block;2
      expr: null
      stmts:
      - !assn;3
        export: false
        lhs: !name;1
          value: ret
        rhs: !block;2
          expr: !name;1
            value: :base.macros:case:1
          stmts:
          - !assn;3
            export: false
            lhs: !name;1
              value: :base.macros:case:0
            rhs: !name;1
              value: n
            var: true
          - !assn;3
            export: false
            lhs: !name;1
              value: :base.macros:case:1
            rhs: !null;1 {}
            var: true
          - !if;1
            body: !assn;3
              export: false
              lhs: !name;1
                value: :base.macros:case:1
              rhs: !int;1
                value: 1
              var: false
            els: !if;1
              body: !assn;3
                export: false
                lhs: !name;1
                  value: :base.macros:case:1
                rhs: !int;1
                  value: 4
                var: false
              els: !if;1
                body: !assn;3
                  export: false
                  lhs: !name;1
                    value: :base.macros:case:1
                  rhs: !int;1
                    value: 9
                  var: false
                els: !if;1
                  body: !assn;3
                    export: false
                    lhs: !name;1
                      value: :base.macros:case:1
                    rhs: !int;1
                      value: 16
                    var: false
                  els: !assn;3
                    export: false
                    lhs: !name;1
                      value: :base.macros:case:1
                    rhs: !int;1
                      value: 0
                    var: false
                  pred: !binary;1
                    lhs: !name;1
                      value: :base.macros:case:0
                    op: ==
                    rhs: !int;1
                      value: 4
                pred: !binary;1
                  lhs: !name;1
                    value: :base.macros:case:0
                  op: ==
                  rhs: !int;1
                    value: 3
              pred: !binary;1
                lhs: !name;1
                  value: :base.macros:case:0
                op: ==
                rhs: !int;1
                  value: 2
            pred: !binary;1
              lhs: !name;1
                value: :base.macros:case:0
              op: ==
              rhs: !int;1
                value: 1
        var: true
      - !return;1
        value: !name;1
          value: ret
    params:
    - n
    rename: null
  var: true
- !assn;3
  export: false
  lhs: !name;1
    value: main
  rhs: !func;2
    body: !block;2
      expr: null
      stmts:
      - !block;2
        expr: null
        stmts:
        - !call;1
          args:
          - !index;1
            lhs: !name;1
              value: fudge
            rhs: !int;1
              value: 0
          catch: false
          func: !name;1
            value: print
        - !call;1
          args:
          - !index;1
            lhs: !name;1
              value: fudge
            rhs: !int;1
              value: 1
          catch: false
          func: !name;1
            value: print
        - !call;1
          args:
          - !index;1
            lhs: !name;1
              value: fudge
            rhs: !int;1
              value: 2
          catch: false
          func: !name;1
            value: print
      - !block;2
        expr: null
        stmts:
        - !call;1
          args:
          - !str;1
            value: '----'
          catch: false
          func: !name;1
            value: print
        - !call;1
          args:
          - !index;1
            lhs: !name;1
              value: node
            rhs: !str;1
              value: tag
          catch: false
          func: !name;1
            value: print
        - !call;1
          args:
          - !index;1
            lhs: !name;1
              value: node
            rhs: !str;1
              value: body
          catch: false
          func: !name;1
            value: print
      - !call;1
        args:
        - !str;1
          value: Hello!
        catch: false
        func: !name;1
          value: print
      - !block;2
        expr: null
        stmts:
        - !assn;3
          export: false
          lhs: !name;1
            value: :base.macros:match:0
          rhs: !name;1
            value: person
          var: true
        - !assn;3
          export: false
          lhs: !name;1
            value: string
          rhs: !index;1
            lhs: !name;1
              value: :base.macros:match:0
            rhs: !str;1
              value: name
          var: true
        - !assn;3
          export: false
          lhs: !name;1
            value: number
          rhs: !index;1
            lhs: !name;1
              value: :base.macros:match:0
            rhs: !str;1
              value: age
          var: true
      - !call;1
        args:
        - !name;1
          value: string
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !name;1
          value: number
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !call;1
          args:
          - !int;1
            value: 3
          catch: false
          func: !name;1
            value: square
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !call;1
          args:
          - !int;1
            value: 4
          catch: false
          func: !name;1
            value: square
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !call;1
          args:
          - !int;1
            value: 5
          catch: false
          func: !name;1
            value: square
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !call;1
          args:
          - !int;1
            value: 6
          catch: false
          func: !name;1
            value: square
        catch: false
        func: !name;1
          value: print
    params: []
    rename: null
  var: true
