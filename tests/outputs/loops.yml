!program;1
stmts:
- !assn;4
  lhs: !name;1
    value: main
  rhs: !func;2
    body: !block;2
      expr: null
      stmts:
      - !assn;4
        lhs: !name;1
          value: n
        rhs: !int;1
          value: 0
        var: true
      - !while;1
        body: !block;2
          expr: null
          stmts:
          - !call;1
            args:
            - !name;1
              value: n
            catch: false
            func: !name;1
              value: print
          - !assn;4
            lhs: !name;1
              value: n
            rhs: !binary;1
              lhs: !name;1
                value: n
              op: +
              rhs: !int;1
                value: 1
            var: false
        pred: !binary;1
          lhs: !name;1
            value: n
          op: <
          rhs: !int;1
            value: 10
      - !call;1
        args:
        - !str;1
          value: '----'
        catch: false
        func: !name;1
          value: print
      - !until;1
        body: !block;2
          expr: null
          stmts:
          - !call;1
            args:
            - !name;1
              value: n
            catch: false
            func: !name;1
              value: print
          - !assn;4
            lhs: !name;1
              value: n
            rhs: !binary;1
              lhs: !name;1
                value: n
              op: '-'
              rhs: !int;1
                value: 1
            var: false
        pred: !binary;1
          lhs: !name;1
            value: n
          op: <
          rhs: !int;1
            value: 1
      - !call;1
        args:
        - !str;1
          value: '----'
        catch: false
        func: !name;1
          value: print
      - !loop;1
        body: !block;2
          expr: null
          stmts:
          - !assn;4
            lhs: !name;1
              value: n
            rhs: !binary;1
              lhs: !name;1
                value: n
              op: +
              rhs: !int;1
                value: 1
            var: false
          - !continue;1
            cond: !binary;1
              lhs: !binary;1
                lhs: !name;1
                  value: n
                op: '>='
                rhs: !int;1
                  value: 4
              op: '&'
              rhs: !binary;1
                lhs: !name;1
                  value: n
                op: <
                rhs: !int;1
                  value: 6
          - !call;1
            args:
            - !name;1
              value: n
            catch: false
            func: !name;1
              value: print
          - !break;1
            cond: !binary;1
              lhs: !name;1
                value: n
              op: ==
              rhs: !int;1
                value: 10
    params: []
    rename: null
  var: true
