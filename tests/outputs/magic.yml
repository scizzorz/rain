!program;1
stmts:
- !assn;4
  lhs: !name;1
    value: wrapper
  rhs: !table;2 {}
  var: true
- !assn;4
  lhs: !index;1
    lhs: !name;1
      value: wrapper
    rhs: !str;1
      value: new
  rhs: !func;2
    body: !block;2
      expr: null
      stmts:
      - !return;1
        value: !binary;1
          lhs: !dict;2
            items:
            - - !str;1
                value: value
              - !name;1
                value: value
            set_meta: true
          op: '::'
          rhs: !name;1
            value: self
    params:
    - self
    - value
    rename: null
  var: false
- !assn;4
  lhs: !index;1
    lhs: !name;1
      value: wrapper
    rhs: !str;1
      value: str
  rhs: !func;2
    body: !block;2
      expr: null
      stmts:
      - !return;1
        value: !binary;1
          lhs: !binary;1
            lhs: !str;1
              value: wrap(
            op: $
            rhs: !call;1
              args:
              - !index;1
                lhs: !name;1
                  value: self
                rhs: !str;1
                  value: value
              catch: false
              func: !name;1
                value: tostr
          op: $
          rhs: !str;1
            value: )
    params:
    - self
    rename: null
  var: false
- !assn;4
  lhs: !index;1
    lhs: !name;1
      value: wrapper
    rhs: !str;1
      value: add
  rhs: !func;2
    body: !block;2
      expr: null
      stmts:
      - !return;1
        value: !binary;1
          lhs: !dict;2
            items:
            - - !str;1
                value: value
              - !binary;1
                lhs: !index;1
                  lhs: !name;1
                    value: self
                  rhs: !str;1
                    value: value
                op: +
                rhs: !index;1
                  lhs: !name;1
                    value: other
                  rhs: !str;1
                    value: value
            set_meta: true
          op: '::'
          rhs: !call;1
            args:
            - !name;1
              value: self
            catch: false
            func: !name;1
              value: meta
    params:
    - self
    - other
    rename: null
  var: false
- !assn;4
  lhs: !index;1
    lhs: !name;1
      value: wrapper
    rhs: !str;1
      value: mul
  rhs: !func;2
    body: !block;2
      expr: null
      stmts:
      - !return;1
        value: !binary;1
          lhs: !dict;2
            items:
            - - !str;1
                value: value
              - !binary;1
                lhs: !index;1
                  lhs: !name;1
                    value: self
                  rhs: !str;1
                    value: value
                op: '*'
                rhs: !index;1
                  lhs: !name;1
                    value: other
                  rhs: !str;1
                    value: value
            set_meta: true
          op: '::'
          rhs: !call;1
            args:
            - !name;1
              value: self
            catch: false
            func: !name;1
              value: meta
    params:
    - self
    - other
    rename: null
  var: false
- !assn;4
  lhs: !index;1
    lhs: !name;1
      value: wrapper
    rhs: !str;1
      value: sub
  rhs: !func;2
    body: !block;2
      expr: null
      stmts:
      - !return;1
        value: !binary;1
          lhs: !dict;2
            items:
            - - !str;1
                value: value
              - !binary;1
                lhs: !index;1
                  lhs: !name;1
                    value: self
                  rhs: !str;1
                    value: value
                op: '-'
                rhs: !index;1
                  lhs: !name;1
                    value: other
                  rhs: !str;1
                    value: value
            set_meta: true
          op: '::'
          rhs: !call;1
            args:
            - !name;1
              value: self
            catch: false
            func: !name;1
              value: meta
    params:
    - self
    - other
    rename: null
  var: false
- !assn;4
  lhs: !index;1
    lhs: !name;1
      value: wrapper
    rhs: !str;1
      value: div
  rhs: !func;2
    body: !block;2
      expr: null
      stmts:
      - !return;1
        value: !binary;1
          lhs: !dict;2
            items:
            - - !str;1
                value: value
              - !binary;1
                lhs: !index;1
                  lhs: !name;1
                    value: self
                  rhs: !str;1
                    value: value
                op: /
                rhs: !index;1
                  lhs: !name;1
                    value: other
                  rhs: !str;1
                    value: value
            set_meta: true
          op: '::'
          rhs: !call;1
            args:
            - !name;1
              value: self
            catch: false
            func: !name;1
              value: meta
    params:
    - self
    - other
    rename: null
  var: false
- !assn;4
  lhs: !name;1
    value: main
  rhs: !func;2
    body: !block;2
      expr: null
      stmts:
      - !assn;4
        lhs: !name;1
          value: a
        rhs: !method;1
          args:
          - !int;1
            value: 40
          catch: false
          lhs: !name;1
            value: wrapper
          rhs: !str;1
            value: new
        var: true
      - !assn;4
        lhs: !name;1
          value: b
        rhs: !method;1
          args:
          - !int;1
            value: 8
          catch: false
          lhs: !name;1
            value: wrapper
          rhs: !str;1
            value: new
        var: true
      - !assn;4
        lhs: !name;1
          value: add
        rhs: !binary;1
          lhs: !name;1
            value: a
          op: +
          rhs: !name;1
            value: b
        var: true
      - !assn;4
        lhs: !name;1
          value: mul
        rhs: !binary;1
          lhs: !name;1
            value: a
          op: '*'
          rhs: !name;1
            value: b
        var: true
      - !assn;4
        lhs: !name;1
          value: div
        rhs: !binary;1
          lhs: !name;1
            value: a
          op: /
          rhs: !name;1
            value: b
        var: true
      - !assn;4
        lhs: !name;1
          value: sub
        rhs: !binary;1
          lhs: !name;1
            value: a
          op: '-'
          rhs: !name;1
            value: b
        var: true
      - !call;1
        args:
        - !name;1
          value: a
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !name;1
          value: b
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !name;1
          value: add
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !name;1
          value: mul
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !name;1
          value: div
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !name;1
          value: sub
        catch: false
        func: !name;1
          value: print
    params: []
    rename: null
  var: true
