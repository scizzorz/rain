!program;1
stmts:
- !assn;4
  lhs: !name;1
    value: main
  rhs: !func;2
    body: !block;2
      expr: null
      stmts:
      - !call;1
        args:
        - !str;1
          value: LHS < RHS
        catch: false
        func: !name;1
          value: print
      - !assn;4
        lhs:
        - !name;1
          value: a
        rhs: !array;1
          items:
          - !int;1
            value: 1
          - !int;1
            value: 2
          - !int;1
            value: 3
        var: true
      - !call;1
        args:
        - !name;1
          value: a
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !str;1
          value: LHS == RHS
        catch: false
        func: !name;1
          value: print
      - !assn;4
        lhs:
        - !name;1
          value: b
        - !name;1
          value: c
        rhs: !array;1
          items:
          - !int;1
            value: 1
          - !int;1
            value: 2
        var: true
      - !call;1
        args:
        - !name;1
          value: b
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !name;1
          value: c
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !str;1
          value: LHS > RHS
        catch: false
        func: !name;1
          value: print
      - !assn;4
        lhs:
        - !name;1
          value: d
        - !name;1
          value: e
        - !name;1
          value: f
        rhs: !array;1
          items:
          - !int;1
            value: 1
        var: true
      - !call;1
        args:
        - !name;1
          value: d
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !name;1
          value: e
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !name;1
          value: f
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !str;1
          value: Nested LHS == Nested RHS
        catch: false
        func: !name;1
          value: print
      - !assn;4
        lhs:
        - !name;1
          value: g
        - - !name;1
            value: h
          - !name;1
            value: i
        - !name;1
          value: j
        rhs: !array;1
          items:
          - !int;1
            value: 1
          - !array;1
            items:
            - !int;1
              value: 2
            - !int;1
              value: 3
          - !int;1
            value: 4
        var: true
      - !call;1
        args:
        - !name;1
          value: g
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !name;1
          value: h
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !name;1
          value: i
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !name;1
          value: j
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !str;1
          value: Nested LHS != Nested RHS
        catch: false
        func: !name;1
          value: print
      - !assn;4
        lhs:
        - - !name;1
            value: k
          - !name;1
            value: l
        - !name;1
          value: m
        - !name;1
          value: n
        rhs: !array;1
          items:
          - !int;1
            value: 1
          - !array;1
            items:
            - !int;1
              value: 2
            - !int;1
              value: 3
          - !int;1
            value: 4
        var: true
      - !call;1
        args:
        - !name;1
          value: k
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !name;1
          value: l
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !index;1
          lhs: !name;1
            value: m
          rhs: !int;1
            value: 0
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !index;1
          lhs: !name;1
            value: m
          rhs: !int;1
            value: 1
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !name;1
          value: n
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !str;1
          value: LHS == Nested RHS
        catch: false
        func: !name;1
          value: print
      - !assn;4
        lhs:
        - !name;1
          value: o
        - !name;1
          value: p
        - !name;1
          value: q
        rhs: !array;1
          items:
          - !int;1
            value: 1
          - !array;1
            items:
            - !int;1
              value: 2
            - !int;1
              value: 3
          - !array;1
            items:
            - !int;1
              value: 4
            - !array;1
              items:
              - !int;1
                value: 5
        var: true
      - !call;1
        args:
        - !name;1
          value: o
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !index;1
          lhs: !name;1
            value: p
          rhs: !int;1
            value: 0
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !index;1
          lhs: !name;1
            value: p
          rhs: !int;1
            value: 1
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !index;1
          lhs: !name;1
            value: q
          rhs: !int;1
            value: 0
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !index;1
          lhs: !index;1
            lhs: !name;1
              value: q
            rhs: !int;1
              value: 1
          rhs: !int;1
            value: 0
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !str;1
          value: Swap 1
        catch: false
        func: !name;1
          value: print
      - !assn;4
        lhs:
        - !name;1
          value: b
        - !name;1
          value: c
        rhs: !array;1
          items:
          - !name;1
            value: c
          - !name;1
            value: b
        var: false
      - !call;1
        args:
        - !name;1
          value: b
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !name;1
          value: c
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !str;1
          value: Swap 2
        catch: false
        func: !name;1
          value: print
      - !assn;4
        lhs: !name;1
          value: x
        rhs: !array;1
          items:
          - !int;1
            value: 1
          - !int;1
            value: 2
        var: true
      - !assn;4
        lhs:
        - !index;1
          lhs: !name;1
            value: x
          rhs: !int;1
            value: 1
        - !index;1
          lhs: !name;1
            value: x
          rhs: !int;1
            value: 0
        rhs: !name;1
          value: x
        var: false
      - !call;1
        args:
        - !index;1
          lhs: !name;1
            value: x
          rhs: !int;1
            value: 0
        catch: false
        func: !name;1
          value: print
      - !call;1
        args:
        - !index;1
          lhs: !name;1
            value: x
          rhs: !int;1
            value: 1
        catch: false
        func: !name;1
          value: print
    params: []
    rename: null
  var: true
